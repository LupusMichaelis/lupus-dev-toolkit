# This is a revision of Alpine's Apache configuration for
# <URL:https://github.com/LupusMichaelis/lupus-dev-toolkit/>

# See <URL:http://httpd.apache.org/docs/2.4/> for detailed information.
# In particular, see <URL:http://httpd.apache.org/docs/2.4/mod/directives.html>
# for a discussion of each configuration directive.

# XXX To assess
# Set a timeout for how long the client may take to send the request header
# and body.
# The default for the headers is header=20-40,MinRate=500, which means wait
# for the first byte of headers for 20 seconds. If some data arrives,
# increase the timeout corresponding to a data rate of 500 bytes/s, but not
# above 40 seconds.
# The default for the request body is body=20,MinRate=500, which is the same
# but has no upper limit for the timeout.
# To disable, set to header=0 body=0
#
<IfModule reqtimeout_module>
  RequestReadTimeout header=20-40,MinRate=500 body=20,MinRate=500
</IfModule>

# vim: set ft=apache noet :

ServerName ${LUPUSMICHAELIS_APACHE_SERVER_NAME}
ServerRoot /var/www
ServerTokens Prod
ServerSignature Off

# Default Off
# To avoid the client to decide what we provide, enforce local determination
UseCanonicalName On

Listen 80

# Default 60
# Set a low delay to avoid dandling connections
Timeout 2

# Default On
KeepAlive On
# Default 100
MaxKeepAliveRequests 100
# Default 5
KeepAliveTimeout 2

EnableMMAP on
EnableSendfile on

# Default Off
HostnameLookups Off

LoadModule mpm_event_module modules/mod_mpm_event.so
LoadModule authn_file_module modules/mod_authn_file.so
LoadModule authn_core_module modules/mod_authn_core.so
LoadModule authz_host_module modules/mod_authz_host.so
LoadModule authz_groupfile_module modules/mod_authz_groupfile.so
LoadModule authz_user_module modules/mod_authz_user.so
LoadModule authz_core_module modules/mod_authz_core.so
LoadModule access_compat_module modules/mod_access_compat.so
LoadModule auth_basic_module modules/mod_auth_basic.so
LoadModule reqtimeout_module modules/mod_reqtimeout.so
LoadModule filter_module modules/mod_filter.so
LoadModule mime_module modules/mod_mime.so
LoadModule log_config_module modules/mod_log_config.so
LoadModule env_module modules/mod_env.so
LoadModule headers_module modules/mod_headers.so
LoadModule setenvif_module modules/mod_setenvif.so
LoadModule version_module modules/mod_version.so
LoadModule http2_module modules/mod_http2.so
LoadModule unixd_module modules/mod_unixd.so
LoadModule status_module modules/mod_status.so
LoadModule autoindex_module modules/mod_autoindex.so
LoadModule dir_module modules/mod_dir.so
LoadModule alias_module modules/mod_alias.so
LoadModule rewrite_module modules/mod_rewrite.so
LoadModule negotiation_module modules/mod_negotiation.so

<IfModule unixd_module>
	User ${LUPUSMICHAELIS_APACHE_USER}
	Group ${LUPUSMICHAELIS_APACHE_GROUP}
</IfModule>

ServerAdmin ${LUPUSMICHAELIS_APACHE_ADMIN_EMAIL}

AccessFileName .htaccess

# Deny access to the entirety of your server's filesystem. You must
# explicitly permit access to web content directories in other
# <Directory> blocks below.
<Directory />
    AllowOverride none
    Require all denied
	AllowOverrideList None
    AllowOverride None
</Directory>

DocumentRoot ${LUPUSMICHAELIS_APACHE_LOCALHOST_ROOT}
<Directory ${LUPUSMICHAELIS_APACHE_LOCALHOST_ROOT}>
    Options FollowSymLinks
    Require all granted
</Directory>

<IfModule dir_module>
    DirectoryIndex index.html
</IfModule>

<Files ".ht*">
    Require all denied
</Files>

<IfModule headers_module>
    RequestHeader unset Proxy early
</IfModule>

<IfModule mime_module>
    TypesConfig /etc/apache2/mime.types

    AddType application/x-gzip .tgz
    AddEncoding x-compress .Z
    AddEncoding x-gzip .gz .tgz
    AddType application/x-compress .Z
    AddType application/x-gzip .gz .tgz
</IfModule>

<IfModule mime_magic_module>
    MIMEMagicFile /etc/apache2/magic
</IfModule>

IncludeOptional /etc/apache2/conf.d/*.conf
IncludeOptional /etc/apache2/sites.d/*.conf

# vim: set ft=apache noet :
