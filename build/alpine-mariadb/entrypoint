#!/bin/bash

set -euo pipefail
shopt -s lastpipe

. $LUPUSMICHAELIS_DIR/lib/library

lupusmichaelis-debug-handle

init()
{
	local -r sql_tmp=$(mktemp)
	local -ar myargs=(
		--user="${MYSQL_SYSUSER}"
		--datadir="${MYSQL_DATA_PATH}"
	)

	mysql_install_db --skip-test-db ${myargs[@]} ||
		true # Let's ignore failing installation, we don't care at this point

	mysqld_safe --skip-networking ${myargs[@]} &
	local -r pid="$!"
	sleep 2 # Wait for daemon to start up

	mysql_upgrade ||
		true # it fails if database already upgraded

	{
		local schema
		local space
		if [ -d $INIT_DIR/schema ]
		then
			for schema in $(ls $INIT_DIR/schema/*.sql)
			do
				space=$(basename $schema .sql) # XXX Test not busybox
				echo "-- $schema --"
				echo "create database if not exists \`$space\`;"
				echo "use \`$space\`;"
				cat $schema
			done
            echo
		fi

		if [[ -v LUPUSMICHAELIS_DEV_USER_ALIAS && -n "$LUPUSMICHAELIS_DEV_USER_ALIAS" ]]
		then
			cat <<- SQL
			create user if not exists '${LUPUSMICHAELIS_DEV_USER_ALIAS}'@'localhost';
			grant all privileges on *.* to '${LUPUSMICHAELIS_DEV_USER_ALIAS}'@'localhost';
			SQL

			if [[ -v MYSQL_ROOT_PASSWORD && -n "$MYSQL_ROOT_PASSWORD" ]]
			then
				cat <<- SQL
				create user if not exists '${LUPUSMICHAELIS_DEV_USER_ALIAS}'@'%' identified by '${MYSQL_ROOT_PASSWORD}';
				grant all privileges on *.* to '${LUPUSMICHAELIS_DEV_USER_ALIAS}'@'%';
				SQL
			fi
		fi

		if [ -f $INIT_DIR/credentials ]
		then
			echo "-- credentials --"
			echo "use \`mysql\`;"
			echo

			local user
			local host
			local space
			local table
			local password
			while IFS=';' read -r user host space table password
			do
				if [ "$table" != '*' ]
				then
					table="`$table`"
				fi

				cat <<- SQL
				create user if not exists '${user}'@'${host}' identified by '${password}';
				grant all privileges on \`${space}\`.${table} to '${user}'@'${host}';
				SQL
			done < $INIT_DIR/credentials

			echo 'flush privileges;'
            echo
		fi
	} | tee "$sql_tmp" | mysql

	test $? -ne 0 && echo "Error on data populating"

	mysqladmin shutdown
	wait "$pid"
}

run()
{
	local mysqld_cmd=(
		gosu ${MYSQL_SYSUSER} mysqld_safe
			--datadir "${MYSQL_DATA_PATH}"
	)

	if (( $# > 0 )) && [[ "$1" != mysqld_safe ]]
	then
		${mysqld_cmd[@]} &
		exec "$@"
	else
		exec ${mysqld_cmd[@]}
	fi
}

init
run "$@"
